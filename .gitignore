# Core Network DevOps Agent - .gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/
*.code-workspace

# AWS specific
.aws/
aws-credentials
aws-config
*.pem
*.key

# AWS CDK
cdk.out/
cdk.context.json
.cdk.staging/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
terraform.tfvars.json
*.tfplan

# Kubernetes
kubeconfig
*.kubeconfig
kube-config
.kube/
helm-charts/
k8s-secrets/

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml
.docker/

# Network Function specific
network-functions/secrets/
nf-configs/private/
*.crt
*.csr
*.p12
*.pfx

# 5G/LTE Core Network
core-network-configs/private/
plmn-configs/
subscriber-data/
network-slices/private/

# Monitoring and Logging
logs/
*.log
log/
monitoring/grafana/data/
monitoring/prometheus/data/
alertmanager/data/

# Configuration files with secrets
config/secrets/
config/private/
config/*.secret
config/*.private
secrets/
private/

# Environment specific configs
config/local.yaml
config/development.yaml
config/staging.yaml
config/production.yaml
.env.local
.env.development
.env.staging
.env.production

# Agent specific
agent-state/
conversation-history/
tool-cache/
bedrock-cache/

# Test artifacts
test-results/
test-reports/
test-coverage/
.coverage.*
htmlcov/

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE and editor files
*.sublime-project
*.sublime-workspace
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
*.code-workspace

# Backup files
*.bak
*.backup
*.old
*.orig

# Package manager files
package-lock.json
yarn.lock
pnpm-lock.yaml

# Local development
local/
dev/
sandbox/

# Documentation build
docs/build/
docs/_build/
site/

# Certificates and keys
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
*.jks
*.keystore
*.truststore

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/
__pycache__/
.pytest_cache/
.mypy_cache/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
.nyc_output/

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache/

# Next.js build output
.next/
out/

# Nuxt.js build / generate output
.nuxt/
dist/

# Storybook build outputs
.out/
.storybook-out/

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea/
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Eclipse
.project
.classpath
.c9/
*.launch
.settings/
.metadata/

# NetBeans
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

# Gradle
.gradle/
build/

# Maven
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
.mvn/wrapper/maven-wrapper.jar

# SBT
.bloop/
.metals/
project/metals.sbt

# Scala IDE specific
.scala_dependencies
.worksheet

# ENSIME specific
.ensime_cache/
.ensime

# Mill
out/

# Bloop
.bloop/
.metals/
project/metals.sbt

# Metals
.metals/

# VS Code Metals
.vscode/settings.json

# Ignore Mac DS_Store files
.DS_Store

# Ignore Windows thumbnail files
Thumbs.db

# Ignore Linux backup files
*~

# Project specific ignores
demo-outputs/
test-outputs/
benchmark-results/
performance-logs/

# Agent conversation logs
conversations/
chat-history/
agent-logs/

# Tool execution logs
tool-logs/
execution-traces/

# Bedrock model cache
model-cache/
bedrock-responses/

# Network function deployment artifacts
deployments/generated/
manifests/generated/
helm-releases/

# Monitoring data
metrics/
traces/
spans/

# Local overrides
local-config/
override-config/
custom-config/